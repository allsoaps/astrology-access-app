VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "Form_frmEventAssignList"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Compare Database
Option Explicit

' Form-level variables
Private m_PersonID As Long
Private m_ViewerName As String
Private Const TEMP_TABLE_NAME As String = "tmpEventAssignments"

'================'
' FORM EVENTS    '
'================'

Private Sub Form_Load()
    On Error GoTo ErrorHandler
    
    ' Disable buttons until data is ready
    Me.btnSelectAll.Enabled = False
    Me.btnSelectNone.Enabled = False
    Me.btnSave.Enabled = False
    
    ' Set default title
    Me.lblTitle.Caption = "Assign Events to Viewer"
    
    ' Parse OpenArgs to get PersonID and ViewerName
    If Not IsNull(Me.openArgs) And Len(Me.openArgs) > 0 Then
        Dim args() As String
        args = Split(Me.openArgs, "|")
        
        If UBound(args) >= 0 Then m_PersonID = CLng(args(0))
        If UBound(args) >= 1 Then
            m_ViewerName = args(1)
            If Len(m_ViewerName) > 0 Then Me.lblTitle.Caption = "Assign Events to Viewer: " & m_ViewerName
        End If
        
        ' Set up the temporary table and bind the form to it
        If m_PersonID > 0 Then
            SetupTempTable
            BindFormToData
            ' Enable buttons now that data is loaded
            Me.btnSelectAll.Enabled = True
            Me.btnSelectNone.Enabled = True
            Me.btnSave.Enabled = True
        End If
    End If
    
    Exit Sub

ErrorHandler:
    MsgBox "Error loading event assignment form: " & Err.Description, vbCritical, "Form Load Error"
    ' Clean up on error
    CleanupTempTable
End Sub

Private Sub Form_Close()
    ' Unbind the form from the temporary table first
    Me.RecordSource = ""
    
    ' Now delete the temporary table
    CleanupTempTable
End Sub

'================'
' CONTROL EVENTS '
'================'

Private Sub chkIsAssigned_AfterUpdate()
    ' After the user checks or unchecks a box, requery the form
    ' to re-apply the sort order, which moves the record to the top or bottom of the list.
    Me.Requery
End Sub


'================'
' BUTTON EVENTS  '
'================'

Private Sub btnSelectAll_Click()
    UpdateAllCheckboxes True
End Sub

Private Sub btnSelectNone_Click()
    UpdateAllCheckboxes False
End Sub

Private Sub btnSave_Click()
    On Error GoTo ErrorHandler
    
    ' Force the form to save any pending edits (like the last checkbox clicked)
    ' before we read from the underlying table.
    If Me.Dirty Then
        Me.Dirty = False
    End If
    
    Dim db As DAO.Database
    Dim ws As DAO.Workspace
    Dim rsTemp As DAO.Recordset
    Dim sql As String
    Dim assignmentCount As Long
    
    If m_PersonID = 0 Then
        MsgBox "No viewer selected. Cannot save assignments.", vbCritical, "Save Error"
        Exit Sub
    End If
    
    ' Get workspace and database for transaction
    Set ws = DBEngine.Workspaces(0)
    Set db = CurrentDb()
    
    ' Start transaction
    ws.BeginTrans
    
    ' 1. Delete all existing assignments for this viewer
    sql = "DELETE * FROM tblAssignments WHERE PersonID = " & m_PersonID
    db.Execute sql, dbFailOnError
    
    ' 2. Open the temporary table to read the new assignments
    Set rsTemp = db.OpenRecordset("SELECT EventID FROM " & TEMP_TABLE_NAME & " WHERE IsAssigned = True")
    
    ' 3. Loop through and insert the new assignments
    If Not rsTemp.EOF Then
        Do While Not rsTemp.EOF
            sql = "INSERT INTO tblAssignments (PersonID, EventID, DateCreated) " & _
                  "VALUES (" & m_PersonID & ", " & rsTemp!EventID & ", Now())"
            db.Execute sql, dbFailOnError
            assignmentCount = assignmentCount + 1
            rsTemp.MoveNext
        Loop
    End If
    
    ' Commit the transaction
    ws.CommitTrans
    
    ' Show success message and close
    MsgBox assignmentCount & " event(s) assigned successfully.", vbInformation, "Save Complete"
    DoCmd.Close acForm, Me.name
    
CleanExit:
    On Error Resume Next
    rsTemp.Close
    Set rsTemp = Nothing
    Set db = Nothing
    Set ws = Nothing
    Exit Sub

ErrorHandler:
    ws.Rollback
    MsgBox "Error saving assignments: " & Err.Description, vbCritical, "Save Error"
    Resume CleanExit
End Sub

Private Sub btnCancel_Click()
    DoCmd.Close acForm, Me.name
End Sub


'================'
' HELPER SUBS    '
'================'

Private Sub SetupTempTable()
    On Error GoTo ErrorHandler
    
    Dim db As DAO.Database
    Set db = CurrentDb()
    
    ' 1. Make sure temp table doesn't already exist from a prior crash
    CleanupTempTable
    
    ' 2. Create the temp table structure.
    db.Execute "CREATE TABLE " & TEMP_TABLE_NAME & " (EventID LONG PRIMARY KEY, IsAssigned YESNO);"
    
    ' 3. Populate it with all events, with checkbox initially unchecked (False).
    db.Execute "INSERT INTO " & TEMP_TABLE_NAME & " ( EventID, IsAssigned ) " & _
               "SELECT EventID, False FROM tblEvents;"
               
    ' 4. Update the temp table, checking the boxes for events already assigned to this viewer.
    db.Execute "UPDATE " & TEMP_TABLE_NAME & " INNER JOIN tblAssignments " & _
               "ON " & TEMP_TABLE_NAME & ".EventID = tblAssignments.EventID " & _
               "SET " & TEMP_TABLE_NAME & ".IsAssigned = True " & _
               "WHERE tblAssignments.PersonID = " & m_PersonID & ";"

CleanExit:
    Set db = Nothing
    Exit Sub

ErrorHandler:
    MsgBox "Error setting up temporary data: " & Err.Description, vbCritical
    Resume CleanExit
End Sub

Private Sub BindFormToData()
    On Error Resume Next
    
    Dim sql As String
    
    ' --- CORRECTED SORT ORDER ---
    ' Change the ORDER BY from DESC to ASC.
    ' In Access, True = -1 and False = 0, so an ascending sort
    ' places the -1 (True) values at the top of the list.
'    sql = "SELECT p.EventID, p.EventName, t.IsAssigned " & _
'          "FROM tblEvents AS p INNER JOIN " & TEMP_TABLE_NAME & " AS t " & _
'          "ON p.EventID = t.EventID " & _
'          "ORDER BY t.IsAssigned ASC, p.EventName;"
    sql = "SELECT p.EventID, p.EventName, p.EventDate, p.EventTime, t.IsAssigned " & _
          "FROM tblEvents AS p INNER JOIN " & TEMP_TABLE_NAME & " AS t " & _
          "ON p.EventID = t.EventID " & _
          "ORDER BY t.IsAssigned ASC, p.EventDate DESC, p.EventTime ASC;"
          
          
    Me.RecordSource = sql
    
    ' The fields on the form (txtEventName, etc.) must have their ControlSource
    ' set to EventName and IsAssigned respectively. This is done in the form designer.
End Sub

Private Sub UpdateAllCheckboxes(selectState As Boolean)
    On Error GoTo ErrorHandler

    CurrentDb.Execute "UPDATE " & TEMP_TABLE_NAME & " SET IsAssigned = " & selectState & ";"
    Me.Requery
    
    Exit Sub
    
ErrorHandler:
    MsgBox "Error updating selection: " & Err.Description, vbCritical
End Sub

Private Sub CleanupTempTable()
    ' Deletes the temporary table.
    On Error GoTo ErrorHandler
    
    ' Make sure we have a database reference
    Dim db As DAO.Database
    Set db = CurrentDb()
    
    ' Unbind the form from the temporary table first
    Me.RecordSource = ""
    
    ' Check if table exists before trying to drop it
    Dim tableExists As Boolean
    tableExists = False
    
    Dim tdf As DAO.TableDef
    For Each tdf In db.TableDefs
        If tdf.name = TEMP_TABLE_NAME Then
            tableExists = True
            Exit For
        End If
    Next tdf
    
    ' Only try to drop if it exists
    If tableExists Then
        db.Execute "DROP TABLE " & TEMP_TABLE_NAME & ";"
    End If
    
    Set db = Nothing
    Exit Sub
    
ErrorHandler:
    ' Log the actual error instead of hiding it
    Debug.Print "Error deleting temporary table " & TEMP_TABLE_NAME & ": " & Err.Description
    Set db = Nothing
End Sub

